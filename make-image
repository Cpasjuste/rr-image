#!/usr/bin/env bash

set -xe

# global variables
OUTPUT_IMG=
LOOP_DEV=

# messages
die() {
  printf '\033[1;31mERROR:\033[0m %s\n' "$@" >&2  # bold red
  exit 1
}

eerror() {
  printf '\033[1;31mERROR:\033[0m %s\n' "$@" >&2  # bold red
}

einfo() {
  printf '\n\033[1;36m> %s\033[0m\n' "$@" >&2  # bold cyan
}

ewarn() {
  printf '\033[1;33m> %s\033[0m\n' "$@" >&2  # bold yellow
}

# cleanup on exit
function cleanup {
  if [ $? -ne 0 ]; then
    eerror 'something went wrong, exiting...'
  fi
  umount -lf /alpine
  losetup -d "$LOOP_DEV"
}

# set trap
trap cleanup EXIT

mkdir -p dist

OUTPUT_IMG="dist/target.img"

rm -Rf "$OUTPUT_IMG"
truncate -s 1G "$OUTPUT_IMG"

fdisk -H 255 -S 63 "$OUTPUT_IMG" <<-EOF
o
n
p
1

+128MB
t
c
n
p
2


w
EOF

LOOP_DEV=$(losetup --partscan --show --find "${OUTPUT_IMG}")
BOOT_DEV="$LOOP_DEV"p1
ROOT_DEV="$LOOP_DEV"p2

# format partitions
mkfs.fat -F32 -n RR-BOOT "$BOOT_DEV"
mkfs.ext4 -L RR-ROOT "$ROOT_DEV"
mkdir -p /alpine
mount --make-private "$ROOT_DEV" /alpine
mkdir -p /alpine/boot
mount --make-private "$BOOT_DEV" /alpine/boot

IMGID="$(dd if="${OUTPUT_IMG}" skip=440 bs=1 count=4 2>/dev/null | xxd -e | cut -f 2 -d' ')"

BOOT_PARTUUID="${IMGID}-01"
ROOT_PARTUUID="${IMGID}-02"

apt-get update
curl https://raw.githubusercontent.com/alpinelinux/alpine-chroot-install/master/alpine-chroot-install \
  | bash -s -- -p ca-certificates -p ssl_client -p busybox-initscripts

cp -R bootstrap/ /alpine/
/alpine/enter-chroot run-parts --exit-on-error /bootstrap/

rm -rf /alpine/var/lib/apt/lists/*
rm -rf /alpine/var/cache/apk/*
rm -rf /alpine/root/*
rm -rf /alpine/bootstrap/
rm  /alpine/env.sh /alpine/etc/resolv.conf /alpine/enter-chroot /alpine/destroy
find /alpine -iname "*-" -delete
find /alpine -iname "*~" -delete

#gzip -c "$OUTPUT_IMG" > "dist/alpine-rpi-$ALPINE_BRANCH-$ARCH.img.gz"
chmod -R 777 dist

einfo 'DONE.'

